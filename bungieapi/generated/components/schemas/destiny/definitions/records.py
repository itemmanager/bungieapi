# generated by update to not change manually
import dataclasses as dt
import typing as t


@dt.dataclass(frozen=True)
class DestinyRecordDefinition:
    completion_info: "DestinyRecordCompletionBlock"
    display_properties: "DestinyDisplayPropertiesDefinition"
    expiration_info: "DestinyRecordExpirationBlock"
    for_title_gilding: bool
    hash: int  # The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally. When entities refer to each other in Destiny content, it is this hash that they are referring to.
    index: int  # The index of the entity as it was found in the investment tables.
    interval_info: "DestinyRecordIntervalBlock"  # Some records have multiple 'interval' objectives, and the record may be claimed at each completed interval
    lore_hash: int
    objective_hashes: t.Sequence[int]
    parent_node_hashes: t.Sequence[
        int
    ]  # A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.
    presentation_info: "DestinyPresentationChildBlock"
    presentation_node_type: "DestinyPresentationNodeType"
    record_value_style: "DestinyRecordValueStyle"
    redacted: bool  # If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
    requirements: "DestinyPresentationNodeRequirementsBlock"
    reward_items: t.Sequence[
        "DestinyItemQuantity"
    ]  # If there is any publicly available information about rewards earned for achieving this record, this is the list of those items.  However, note that some records intentionally have "hidden" rewards. These will not be returned in this list.
    scope: "DestinyScope"  # Indicates whether this Record's state is determined on a per-character or on an account-wide basis.
    state_info: "SchemaRecordStateBlock"
    title_info: "DestinyRecordTitleBlock"
    trait_hashes: t.Sequence[int]
    trait_ids: t.Sequence[str]


@dt.dataclass(frozen=True)
class DestinyRecordTitleBlock:
    gilding_tracking_record_hash: int
    has_title: bool
    titles_by_gender: t.Mapping[str, str]
    titles_by_gender_hash: t.Mapping[
        str, str
    ]  # For those who prefer to use the definitions.


@dt.dataclass(frozen=True)
class DestinyRecordCompletionBlock:
    score_value: int
    partial_completion_objective_count_threshold: int  # The number of objectives that must be completed before the objective is considered "complete"
    should_fire_toast: bool
    toast_style: "DestinyRecordToastStyle"


@dt.dataclass(frozen=True)
class SchemaRecordStateBlock:
    featured_priority: int
    obscured_string: str


@dt.dataclass(frozen=True)
class DestinyRecordExpirationBlock:
    """If this record has an expiration after which it cannot be earned, this
    is some information about that expiration."""

    description: str
    has_expiration: bool
    icon: str


@dt.dataclass(frozen=True)
class DestinyRecordIntervalBlock:
    interval_objectives: t.Sequence["DestinyRecordIntervalObjective"]
    interval_rewards: t.Sequence["DestinyRecordIntervalRewards"]
    original_objective_array_insertion_index: int


@dt.dataclass(frozen=True)
class DestinyRecordIntervalObjective:
    interval_objective_hash: int
    interval_score_value: int


@dt.dataclass(frozen=True)
class DestinyRecordIntervalRewards:
    interval_reward_items: t.Sequence["DestinyItemQuantity"]


from bungieapi.generated.components.schemas.destiny import DestinyScope  # noqa: E402
from bungieapi.generated.components.schemas.destiny import (  # noqa: E402
    DestinyItemQuantity,
    DestinyPresentationNodeType,
    DestinyRecordToastStyle,
    DestinyRecordValueStyle,
)

# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.components.schemas.destiny.definitions.common import (
    DestinyDisplayPropertiesDefinition,
)  # noqa: E402
from bungieapi.generated.components.schemas.destiny.definitions.presentation import (  # noqa: E402
    DestinyPresentationChildBlock,
    DestinyPresentationNodeRequirementsBlock,
)
from bungieapi.generated.components.schemas.destiny.definitions.records import (  # noqa: E402
    DestinyRecordCompletionBlock,
    DestinyRecordExpirationBlock,
    DestinyRecordIntervalBlock,
    DestinyRecordIntervalObjective,
    DestinyRecordIntervalRewards,
    DestinyRecordTitleBlock,
    SchemaRecordStateBlock,
)
