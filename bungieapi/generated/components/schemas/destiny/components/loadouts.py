# generated by update to not change manually
import dataclasses as dt
import typing as t

from bungieapi.json import to_json
from bungieapi.types import ManifestReference


@dt.dataclass(frozen=True)
class DestinyLoadoutsComponent:
    loadouts: t.Sequence["DestinyLoadoutComponent"]

    def to_json(self) -> t.Mapping[str, t.Any]:
        return {
            "loadouts": to_json(self.loadouts),
        }


@dt.dataclass(frozen=True)
class DestinyLoadoutComponent:
    color_hash: ManifestReference["DestinyLoadoutColorDefinition"]
    icon_hash: ManifestReference["DestinyLoadoutIconDefinition"]
    items: t.Sequence["DestinyLoadoutItemComponent"]
    name_hash: ManifestReference["DestinyLoadoutNameDefinition"]

    def to_json(self) -> t.Mapping[str, t.Any]:
        return {
            "colorHash": to_json(self.color_hash),
            "iconHash": to_json(self.icon_hash),
            "nameHash": to_json(self.name_hash),
            "items": to_json(self.items),
        }


@dt.dataclass(frozen=True)
class DestinyLoadoutItemComponent:
    item_instance_id: int
    plug_item_hashes: t.Sequence[int]

    def to_json(self) -> t.Mapping[str, t.Any]:
        return {
            "itemInstanceId": to_json(self.item_instance_id),
            "plugItemHashes": to_json(self.plug_item_hashes),
        }


# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.components.schemas.destiny.definitions.loadouts import (  # noqa: E402
    DestinyLoadoutColorDefinition,
    DestinyLoadoutIconDefinition,
    DestinyLoadoutNameDefinition,
)
