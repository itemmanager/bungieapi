# generated by update to not change manually
import dataclasses as dt
import typing as t


@dt.dataclass(frozen=True)
class DestinyPostGameCarnageReportData:
    period: str
    starting_phase_index: int
    activity_details: "DestinyHistoricalStatsActivity"
    entries: t.Sequence["DestinyPostGameCarnageReportEntry"]
    teams: t.Sequence["DestinyPostGameCarnageReportTeamEntry"]


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsActivity:
    """'Summary information about the activity that was played."""

    reference_id: int
    director_activity_hash: int
    instance_id: int
    mode: "DestinyActivityModeType"
    modes: t.Sequence["DestinyActivityModeType"]
    is_private: bool
    membership_type: "BungieMembershipType"


@dt.dataclass(frozen=True)
class DestinyPostGameCarnageReportEntry:
    standing: int
    score: "DestinyHistoricalStatsValue"
    player: "DestinyPlayer"
    character_id: int
    values: t.Mapping[str, "DestinyHistoricalStatsValue"]
    extended: "DestinyPostGameCarnageReportExtendedData"


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsValue:
    stat_id: str
    basic: "DestinyHistoricalStatsValuePair"
    pga: "DestinyHistoricalStatsValuePair"
    weighted: "DestinyHistoricalStatsValuePair"
    activity_id: int


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsValuePair:
    value: float
    display_value: str


@dt.dataclass(frozen=True)
class DestinyPlayer:
    destiny_user_info: "UserInfoCard"
    character_class: str
    class_hash: int
    race_hash: int
    gender_hash: int
    character_level: int
    light_level: int
    bungie_net_user_info: "UserInfoCard"
    clan_name: str
    clan_tag: str
    emblem_hash: int


@dt.dataclass(frozen=True)
class DestinyPostGameCarnageReportExtendedData:
    weapons: t.Sequence["DestinyHistoricalWeaponStats"]
    values: t.Mapping[str, "DestinyHistoricalStatsValue"]


@dt.dataclass(frozen=True)
class DestinyHistoricalWeaponStats:
    reference_id: int
    values: t.Mapping[str, "DestinyHistoricalStatsValue"]


@dt.dataclass(frozen=True)
class DestinyPostGameCarnageReportTeamEntry:
    team_id: int
    standing: "DestinyHistoricalStatsValue"
    score: "DestinyHistoricalStatsValue"
    team_name: str


@dt.dataclass(frozen=True)
class DestinyLeaderboard:
    stat_id: str
    entries: t.Sequence["DestinyLeaderboardEntry"]


@dt.dataclass(frozen=True)
class DestinyLeaderboardEntry:
    rank: int
    player: "DestinyPlayer"
    character_id: int
    value: "DestinyHistoricalStatsValue"


@dt.dataclass(frozen=True)
class DestinyLeaderboardResults:
    focus_membership_id: int
    focus_character_id: int
    additional: t.Mapping[str, t.Mapping[str, "DestinyLeaderboard"]]


@dt.dataclass(frozen=True)
class DestinyClanAggregateStat:
    mode: "DestinyActivityModeType"
    stat_id: str
    value: "DestinyHistoricalStatsValue"


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsByPeriod:
    all_time: t.Mapping[str, "DestinyHistoricalStatsValue"]
    all_time_tier1: t.Mapping[str, "DestinyHistoricalStatsValue"]
    all_time_tier2: t.Mapping[str, "DestinyHistoricalStatsValue"]
    all_time_tier3: t.Mapping[str, "DestinyHistoricalStatsValue"]
    daily: t.Sequence["DestinyHistoricalStatsPeriodGroup"]
    monthly: t.Sequence["DestinyHistoricalStatsPeriodGroup"]


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsPeriodGroup:
    period: str
    activity_details: "DestinyHistoricalStatsActivity"
    values: t.Mapping[str, "DestinyHistoricalStatsValue"]


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsResults:
    additional: t.Mapping[str, "DestinyHistoricalStatsByPeriod"]


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsAccountResult:
    merged_deleted_characters: "DestinyHistoricalStatsWithMerged"
    merged_all_characters: "DestinyHistoricalStatsWithMerged"
    characters: t.Sequence["DestinyHistoricalStatsPerCharacter"]


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsWithMerged:
    results: t.Mapping[str, "DestinyHistoricalStatsByPeriod"]
    merged: "DestinyHistoricalStatsByPeriod"


@dt.dataclass(frozen=True)
class DestinyHistoricalStatsPerCharacter:
    character_id: int
    deleted: bool
    results: t.Mapping[str, "DestinyHistoricalStatsByPeriod"]
    merged: "DestinyHistoricalStatsByPeriod"


@dt.dataclass(frozen=True)
class DestinyActivityHistoryResults:
    activities: t.Sequence["DestinyHistoricalStatsPeriodGroup"]


@dt.dataclass(frozen=True)
class DestinyHistoricalWeaponStatsData:
    weapons: t.Sequence["DestinyHistoricalWeaponStats"]


@dt.dataclass(frozen=True)
class DestinyAggregateActivityResults:
    activities: t.Sequence["DestinyAggregateActivityStats"]


@dt.dataclass(frozen=True)
class DestinyAggregateActivityStats:
    activity_hash: int
    values: t.Mapping[str, "DestinyHistoricalStatsValue"]


from bungieapi.generated.types import BungieMembershipType  # noqa: E402

# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.types.destiny.historical_stats.definitions import (
    DestinyActivityModeType,
)  # noqa: E402
from bungieapi.generated.types.user import UserInfoCard  # noqa: E402
