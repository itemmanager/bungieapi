# generated by update to not change manually
import dataclasses as dt
import typing as t


@dt.dataclass(frozen=True)
class DestinyItemReusablePlugsComponent:
    plugs: t.Mapping[str, t.Sequence["DestinyItemPlugBase"]]


@dt.dataclass(frozen=True)
class DestinyItemPlugObjectivesComponent:
    objectives_per_plug: t.Mapping[str, t.Sequence["DestinyObjectiveProgress"]]


@dt.dataclass(frozen=True)
class DestinyItemPlugComponent:
    """'Plugs are non-instanced items that can provide Stat and Perk benefits
    when socketed into an instanced item.

    Items have Sockets, and Plugs are inserted into Sockets. This
    component finds all items that are considered "Plugs" in your
    inventory, and return information about the plug aside from any
    specific Socket into which it could be inserted.
    """

    plug_objectives: t.Sequence["DestinyObjectiveProgress"]
    plug_item_hash: int
    can_insert: bool
    enabled: bool
    insert_fail_indexes: t.Sequence[int]
    enable_fail_indexes: t.Sequence[int]


from bungieapi.generated.types.destiny.quests import (
    DestinyObjectiveProgress,
)  # noqa: E402

# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.types.destiny.sockets import DestinyItemPlugBase  # noqa: E402
