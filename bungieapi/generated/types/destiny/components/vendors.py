# generated by update to not change manually
import dataclasses as dt
import typing as t


@dt.dataclass(frozen=True)
class DestinyVendorGroupComponent:
    """'This component returns references to all of the Vendors in the
    response, grouped by categorizations that Bungie has deemed to be
    interesting, in the order in which both the groups and the vendors within
    that group should be rendered."""

    groups: t.Sequence["DestinyVendorGroup"]


@dt.dataclass(frozen=True)
class DestinyVendorGroup:
    """'Represents a specific group of vendors that can be rendered in the
    recommended order.

    How do we figure out this order? It's a long story, and will likely
    get more complicated over time.
    """

    vendor_group_hash: int
    vendor_hashes: t.Sequence[int]


@dt.dataclass(frozen=True)
class DestinyVendorBaseComponent:
    """'This component contains essential/summary information about the
    vendor."""

    vendor_hash: int
    next_refresh_date: str
    enabled: bool


@dt.dataclass(frozen=True)
class DestinyVendorSaleItemBaseComponent:
    """'The base class for Vendor Sale Item data.

    Has a bunch of character-agnostic state about the item being sold.
    Note that if you want instance, stats, etc... data for the item,
    you'll have to request additional components such as ItemInstances,
    ItemPerks etc... and acquire them from the DestinyVendorResponse's
    "items" property.
    """

    vendor_item_index: int
    item_hash: int
    override_style_item_hash: int
    quantity: int
    costs: t.Sequence["DestinyItemQuantity"]
    override_next_refresh_date: str
    api_purchasable: bool


@dt.dataclass(frozen=True)
class DestinyPublicVendorComponent:
    """'This component contains essential/summary information about the vendor
    from the perspective of a character-agnostic view."""

    vendor_hash: int
    next_refresh_date: str
    enabled: bool


@dt.dataclass(frozen=True)
class DestinyPublicVendorSaleItemComponent:
    """'Has character-agnostic information about an item being sold by a
    vendor.

    Note that if you want instance, stats, etc... data for the item,
    you'll have to request additional components such as ItemInstances,
    ItemPerks etc... and acquire them from the DestinyVendorResponse's
    "items" property. For most of these, however, you'll have to ask for
    it in context of a specific character.
    """

    vendor_item_index: int
    item_hash: int
    override_style_item_hash: int
    quantity: int
    costs: t.Sequence["DestinyItemQuantity"]
    override_next_refresh_date: str
    api_purchasable: bool


# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.types.destiny import DestinyItemQuantity  # noqa: E402
