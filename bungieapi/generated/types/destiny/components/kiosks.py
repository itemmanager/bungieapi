# generated by update to not change manually
import dataclasses as dt
import typing as t


@dt.dataclass(frozen=True)
class DestinyKiosksComponent:
    """'A Kiosk is a Vendor (DestinyVendorDefinition) that sells items based on
    whether you have already acquired that item before.

    This component returns information about what Kiosk items are
    available to you on a *Profile* level. It is theoretically possible
    for Kiosks to have items gated by specific Character as well. If you
    ever have those, you will find them on the individual character's
    DestinyCharacterKiosksComponent. Note that, because this component
    returns vendorItemIndexes (that is to say, indexes into the Kiosk
    Vendor's itemList property), these results are necessarily content
    version dependent. Make sure that you have the latest version of the
    content manifest databases before using this data.
    """

    kiosk_items: t.Mapping[str, t.Sequence["DestinyKioskItem"]]


@dt.dataclass(frozen=True)
class DestinyKioskItem:
    index: int
    can_acquire: bool
    failure_indexes: t.Sequence[int]
    flavor_objective: "DestinyObjectiveProgress"


# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.types.destiny.quests import (
    DestinyObjectiveProgress,
)  # noqa: E402
