# generated by update to not change manually
import dataclasses as dt
import typing as t


@dt.dataclass(frozen=True)
class DestinyVendorReceipt:
    """If a character purchased an item that is refundable, a Vendor Receipt
    will be created on the user's Destiny Profile.

    These expire after a configurable period of time, but until then can
    be used to get refunds on items. BNet does not provide the ability
    to refund a purchase *yet*, but you know.
    """

    currency_paid: t.Sequence[
        "DestinyItemQuantity"
    ]  # The amount paid for the item, in terms of items that were consumed in the purchase and their quantity.
    item_received: "DestinyItemQuantity"  # The item that was received, and its quantity.
    license_unlock_hash: int  # The unlock flag used to determine whether you still have the purchased item.
    purchased_by_character_id: int  # The ID of the character who made the purchase.
    refund_policy: "DestinyVendorItemRefundPolicy"  # Whether you can get a refund, and what happens in order for the refund to be received. See the DestinyVendorItemRefundPolicy enum for details.
    sequence_number: int  # The identifier of this receipt.
    time_to_expiration: int  # The seconds since epoch at which this receipt is rendered invalid.
    expires_on: str  # The date at which this receipt is rendered invalid.


# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.types.destiny import DestinyItemQuantity  # noqa: E402
from bungieapi.generated.types.destiny import (
    DestinyVendorItemRefundPolicy,
)  # noqa: E402
