# generated by update to not change manually
import dataclasses as dt
import typing as t
from enum import Enum


class ApplicationScopes(Enum):
    READ_BASIC_USER_PROFILE = 1
    READ_GROUPS = 2
    WRITE_GROUPS = 4
    ADMIN_GROUPS = 8
    BNET_WRITE = 16
    MOVE_EQUIP_DESTINY_ITEMS = 32
    READ_DESTINY_INVENTORY_AND_VAULT = 64
    READ_USER_DATA = 128
    EDIT_USER_DATA = 256
    READ_DESTINY_VENDORS_AND_ADVISORS = 512
    READ_AND_APPLY_TOKENS = 1024
    ADVANCED_WRITE_ACTIONS = 2048
    PARTNER_OFFER_GRANT = 4096
    DESTINY_UNLOCK_VALUE_QUERY = 8192
    USER_PII_READ = 16384


@dt.dataclass(frozen=True)
class ApiUsage:
    api_calls: t.Sequence["Series"]
    throttled_requests: t.Sequence["Series"]


@dt.dataclass(frozen=True)
class Series:
    datapoints: t.Sequence["Datapoint"]
    target: str


@dt.dataclass(frozen=True)
class Datapoint:
    time: str
    count: float


@dt.dataclass(frozen=True)
class Application:
    application_id: int
    name: str
    redirect_url: str
    link: str
    scope: int
    origin: str
    status: "ApplicationStatus"
    creation_date: str
    status_changed: str
    first_published: str
    team: t.Sequence["ApplicationDeveloper"]
    override_authorize_view_name: str


class ApplicationStatus(Enum):
    NONE = 0
    PRIVATE = 1
    PUBLIC = 2
    DISABLED = 3
    BLOCKED = 4


@dt.dataclass(frozen=True)
class ApplicationDeveloper:
    role: "DeveloperRole"
    api_eula_version: int
    user: "UserInfoCard"


class DeveloperRole(Enum):
    NONE = 0
    OWNER = 1
    TEAM_MEMBER = 2


# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.types.user import UserInfoCard  # noqa: E402
