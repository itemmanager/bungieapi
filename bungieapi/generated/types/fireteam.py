# generated by update to not change manually
import dataclasses as dt
import typing as t

FireteamDateRange = t.Any
FireteamPlatform = t.Any
FireteamPublicSearchOption = t.Any
FireteamSlotSearch = t.Any


@dt.dataclass(frozen=True)
class FireteamSummary:
    fireteam_id: int
    group_id: int
    platform: "FireteamPlatform"
    activity_type: int
    is_immediate: bool
    scheduled_time: str
    owner_membership_id: int
    player_slot_count: int
    alternate_slot_count: int
    available_player_slot_count: int
    available_alternate_slot_count: int
    title: str
    date_created: str
    date_modified: str
    is_public: bool
    locale: str
    is_valid: bool
    date_player_modified: str
    title_before_moderation: str


@dt.dataclass(frozen=True)
class FireteamResponse:
    summary: "FireteamSummary"
    members: t.Sequence["FireteamMember"]
    alternates: t.Sequence["FireteamMember"]


@dt.dataclass(frozen=True)
class FireteamMember:
    destiny_user_info: "FireteamUserInfoCard"
    bungie_net_user_info: "UserInfoCard"
    character_id: int
    date_joined: str
    has_microphone: bool
    last_platform_invite_attempt_date: str
    last_platform_invite_attempt_result: "FireteamPlatformInviteResult"


@dt.dataclass(frozen=True)
class FireteamUserInfoCard:
    fireteam_display_name: str
    fireteam_membership_type: "BungieMembershipType"
    supplemental_display_name: str
    icon_path: str
    cross_save_override: "BungieMembershipType"
    applicable_membership_types: t.Sequence["BungieMembershipType"]
    is_public: bool
    membership_type: "BungieMembershipType"
    membership_id: int
    display_name: str
    bungie_global_display_name: str
    bungie_global_display_name_code: int


FireteamPlatformInviteResult = t.Any

from bungieapi.generated.types import BungieMembershipType  # noqa: E402

# imported at the end to do not case circular imports for type annotations
from bungieapi.generated.types.user import UserInfoCard  # noqa: E402
