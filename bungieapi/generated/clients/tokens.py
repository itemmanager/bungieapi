# generated by update to not change manually
import dataclasses as dt
import typing as t

from bungieapi.generated.types.exceptions import PlatformErrorCodes
from bungieapi.generated.types.tokens import PartnerOfferSkuHistoryResponse

from ...base import BaseClient


@dt.dataclass(frozen=True)
class ClaimPartnerOfferClientResponse:
    response: bool
    error_code: "PlatformErrorCodes"
    throttle_seconds: int
    error_status: str
    message: str
    message_data: t.Mapping[str, str]
    detailed_error_trace: str


@dt.dataclass(frozen=True)
class ApplyMissingPartnerOffersWithoutClaimClientResponse:
    response: bool
    error_code: "PlatformErrorCodes"
    throttle_seconds: int
    error_status: str
    message: str
    message_data: t.Mapping[str, str]
    detailed_error_trace: str


@dt.dataclass(frozen=True)
class GetPartnerOfferSkuHistoryClientResponse:
    response: t.Sequence["PartnerOfferSkuHistoryResponse"]
    error_code: "PlatformErrorCodes"
    throttle_seconds: int
    error_status: str
    message: str
    message_data: t.Mapping[str, str]
    detailed_error_trace: str


class Client(BaseClient):
    async def claim_partner_offer(
        self,
    ) -> ClaimPartnerOfferClientResponse:
        """Claim a partner offer as the authenticated user."""
        ...

    async def apply_missing_partner_offers_without_claim(
        self,
        partner_application_id: int,
        target_bnet_membership_id: int,
    ) -> ApplyMissingPartnerOffersWithoutClaimClientResponse:
        """Apply a partner offer to the targeted user.

        This endpoint does not claim a new offer, but any already
        claimed offers will be applied to the game if not already.
        """
        ...

    async def get_partner_offer_sku_history(
        self,
        partner_application_id: int,
        target_bnet_membership_id: int,
    ) -> GetPartnerOfferSkuHistoryClientResponse:
        """Returns the partner sku and offer history of the targeted user.

        Elevated permissions are required to see users that are not
        yourself.
        """
        ...
