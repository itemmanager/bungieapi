# generated by update to not change manually
import dataclasses as dt
import typing as t

from bungieapi.generated.types.applications import ApiUsage, Application
from bungieapi.generated.types.exceptions import PlatformErrorCodes

from ...base import BaseClient


@dt.dataclass(frozen=True)
class GetApplicationApiUsageClientResponse:
    response: "ApiUsage"
    error_code: "PlatformErrorCodes"
    throttle_seconds: int
    error_status: str
    message: str
    message_data: t.Mapping[str, str]
    detailed_error_trace: str


@dt.dataclass(frozen=True)
class GetBungieApplicationsClientResponse:
    response: t.Sequence["Application"]
    error_code: "PlatformErrorCodes"
    throttle_seconds: int
    error_status: str
    message: str
    message_data: t.Mapping[str, str]
    detailed_error_trace: str


class Client(BaseClient):
    async def get_application_api_usage(
        self,
        application_id: int,
        end: t.Optional[str] = None,
        start: t.Optional[str] = None,
    ) -> GetApplicationApiUsageClientResponse:
        """Get API usage by application for time frame specified.

        You can go as far back as 30 days ago, and can ask for up to a
        48 hour window of time in a single request. You must be
        authenticated with at least the ReadUserData permission to
        access this endpoint.
        """
        ...

    async def get_bungie_applications(
        self,
    ) -> GetBungieApplicationsClientResponse:
        """Get list of applications created by Bungie."""
        ...
